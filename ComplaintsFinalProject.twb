<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='ComplaintsFinalProject' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <members>
          <member value='&quot;Closed&quot;' />
          <member value='&quot;Open&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
      <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
        <calculation class='tableau' formula='#2011-12-01#' />
        <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
      </column>
      <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
        <calculation class='tableau' formula='#2018-04-26#' />
        <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
      </column>
    </datasource>
    <datasource caption='Consumer_Complaints' inline='true' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Consumer_Complaints' name='textscan.1w6zi4w1odvvq013repe70i43r8x'>
            <connection class='textscan' directory='C:/Users/Owner/Downloads' filename='Consumer_Complaints.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1w6zi4w1odvvq013repe70i43r8x' name='Consumer_Complaints.csv' table='[Consumer_Complaints#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date received' ordinal='0' />
            <column datatype='string' name='Product' ordinal='1' />
            <column datatype='string' name='Sub-product' ordinal='2' />
            <column datatype='string' name='Issue' ordinal='3' />
            <column datatype='string' name='Sub-issue' ordinal='4' />
            <column datatype='string' name='Consumer complaint narrative' ordinal='5' />
            <column datatype='string' name='Company public response' ordinal='6' />
            <column datatype='string' name='Company' ordinal='7' />
            <column datatype='string' name='State' ordinal='8' />
            <column datatype='string' name='ZIP code' ordinal='9' />
            <column datatype='string' name='Tags' ordinal='10' />
            <column datatype='string' name='Consumer consent provided?' ordinal='11' />
            <column datatype='string' name='Submitted via' ordinal='12' />
            <column datatype='date' name='Date sent to company' ordinal='13' />
            <column datatype='string' name='Company response to consumer' ordinal='14' />
            <column datatype='string' name='Timely response?' ordinal='15' />
            <column datatype='string' name='Consumer disputed?' ordinal='16' />
            <column datatype='integer' name='Complaint ID' ordinal='17' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date received</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date received]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Date received</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-product]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Sub-product</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Issue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Issue]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Issue</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-issue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-issue]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Sub-issue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer complaint narrative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Consumer complaint narrative]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Consumer complaint narrative</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company public response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company public response]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Company public response</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIP code]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>ZIP code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tags]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Tags</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer consent provided?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Consumer consent provided?]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Consumer consent provided?</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submitted via</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Submitted via]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Submitted via</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date sent to company</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date sent to company]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Date sent to company</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company response to consumer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company response to consumer]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Company response to consumer</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timely response?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timely response?]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Timely response?</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer disputed?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Consumer disputed?]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Consumer disputed?</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complaint ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Complaint ID]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Complaint ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
      </column>
      <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
      </column>
      <column datatype='string' name='[Company]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Complaint ID]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[ZIP code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date received]' derivation='None' name='[none:Date received:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date received]' derivation='Month-Trunc' name='[tmn:Date received:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Company)' hidden='true' name='[Action (Company)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Company]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date received)) 1' hidden='true' name='[Action (MONTH(Date received)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Date received:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date received))' hidden='true' name='[Action (MONTH(Date received))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Date received:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date received),MONTH(Date received))' hidden='true' name='[Action (YEAR(Date received),MONTH(Date received))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date received:ok]' />
          <groupfilter function='level-members' level='[mn:Date received:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/Inzemam/ComplaintsFinalProject.twb Files/Data/Downloads/Consumer_Complaints.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/02/2018 06:55:31 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='520009' timestamp-start='2018-05-02 18:55:31.394' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date received</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date received]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date received</remote-alias>
              <ordinal>0</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>640</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>1</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-product</remote-alias>
              <ordinal>2</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Issue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Issue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Issue</remote-alias>
              <ordinal>3</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>87</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-issue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-issue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-issue</remote-alias>
              <ordinal>4</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer complaint narrative</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer complaint narrative]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer complaint narrative</remote-alias>
              <ordinal>5</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>492</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company public response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company public response]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company public response</remote-alias>
              <ordinal>6</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company</remote-alias>
              <ordinal>7</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>8</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ZIP code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP code</remote-alias>
              <ordinal>9</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1631</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Tags]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tags</remote-alias>
              <ordinal>10</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer consent provided?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer consent provided?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer consent provided?</remote-alias>
              <ordinal>11</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Submitted via</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Submitted via]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Submitted via</remote-alias>
              <ordinal>12</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date sent to company</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date sent to company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date sent to company</remote-alias>
              <ordinal>13</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company response to consumer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company response to consumer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company response to consumer</remote-alias>
              <ordinal>14</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Timely response?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Timely response?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Timely response?</remote-alias>
              <ordinal>15</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer disputed?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer disputed?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer disputed?</remote-alias>
              <ordinal>16</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Complaint ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Complaint ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Complaint ID</remote-alias>
              <ordinal>17</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520009</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[none:Date received:qk]' included-values='in-range'>
          <min>#2016-01-03#</min>
          <max>#2018-05-01#</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.522831' group-percentage='0.191781' measure-ordering='alphabetic' measure-percentage='0.141553' parameter-percentage='0.143836' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_283163889272090624:nk]' type='palette'>
            <map to='#626fe1'>
              <bucket>&quot;Closed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;Open&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
        </column>
        <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
          <calculation class='tableau' formula='#2011-12-01#' />
          <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
        </column>
        <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
          <calculation class='tableau' formula='#2018-04-26#' />
          <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Complaints by Company' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Select Status' />
        <param name='target' value='Complaints by Company' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Complaint by Months' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.1b553wp1dpcwkb1dlsqmh1rcp4qk%5D.%5Byr%3ADate%20received%3Aok%5D~s0=&lt;YEAR([Date received])~na&gt;&amp;%5Bfederated.1b553wp1dpcwkb1dlsqmh1rcp4qk%5D.%5Bmn%3ADate%20received%3Aok%5D~s0=&lt;MONTH([Date received])~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Complaint by Months,Complaints by Company' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Complaints by Company' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.1b553wp1dpcwkb1dlsqmh1rcp4qk%5D.%5BCompany%5D~s0=&lt;[Company]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Complaints by Company' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
    </datasources>
    <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
      <column datatype='string' name='[Company]' role='dimension' type='nominal' />
      <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
      <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='All Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>OPEN</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]'>
            <groupfilter function='level-members' level='[Company]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date received:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:Date received:ok]' member='1' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='2' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='3' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Closed&quot;' />
              <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Open&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='39' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#75a1c7' fontsize='18'>&lt;</run>
                <run fontcolor='#75a1c7' fontsize='18'>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</run>
                <run fontcolor='#75a1c7' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Closed Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>OPEN</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]'>
            <groupfilter function='level-members' level='[Company]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date received:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:Date received:ok]' member='1' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='2' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='3' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Closed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#75a1c7' fontsize='18'>&lt;</run>
                <run fontcolor='#75a1c7' fontsize='18'>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</run>
                <run fontcolor='#75a1c7' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Complaint by Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='None' name='[none:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]'>
            <groupfilter function='level-members' level='[Company]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]' value='on' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]' max='1' min='0' num-steps='2' palette='green_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</rows>
        <cols>([federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok] / [federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[mn:Date received:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Complaints by Company'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_283163889275101185])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Company:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]' direction='DESC' using='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>CalStatus:&#9;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='9'> : </run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Complaints by Issue'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Issue]' role='dimension' type='nominal' />
            <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Issue]' derivation='None' name='[none:Issue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]'>
            <groupfilter function='level-members' level='[Company]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date received:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:Date received:ok]' member='1' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='2' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='3' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]' direction='DESC' using='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]'>
            <groupfilter function='level-members' level='[Company]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date received:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:Date received:ok]' member='1' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='2' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='3' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Longitude (generated)]' field-type='quantitative' max='32476589.163464352' min='24374232.367807969' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Latitude (generated)]' field-type='quantitative' max='8459345.4838365912' min='2021856.3933671429' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
              <lod column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:State:nk]' />
              <geometry column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Latitude (generated)]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Open Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>OPEN</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2011-12-01#'>
              <calculation class='tableau' formula='#2011-12-01#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-26#'>
              <calculation class='tableau' formula='#2018-04-26#' />
              <range granularity='1' max='#2018-05-01#' min='#2011-12-01#' period-type='week' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Date received]' derivation='Month' name='[mn:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]'>
            <groupfilter function='level-members' level='[Company]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date received:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:Date received:ok]' member='1' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='2' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='3' />
                <groupfilter function='member' level='[mn:Date received:ok]' member='4' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Open&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (Company)]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Action (YEAR(Date received),MONTH(Date received))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='39' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='wrap' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#75a1c7' fontsize='18'>&lt;</run>
                <run fontcolor='#75a1c7' fontsize='18'>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</run>
                <run fontcolor='#75a1c7' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_26' value='center' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='36' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='48' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='43' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='39' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='37' type='layout-basic' w='100000' x='0' y='0'>
                  <zone h='50000' id='35' name='Complaint by Months' w='50000' x='0' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50000' id='40' name='Complaints by Issue' w='50000' x='50000' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50000' id='41' name='Map' show-title='false' w='50000' x='50000' y='0'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50000' id='45' type='empty' w='50000' x='0' y='0'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='5875' id='1' name='Open Count' show-title='false' w='10800' x='13400' y='15000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='3625' id='7' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16900' x='51000' y='7625'>
          <formatted-text>
            <run fontalignment='0'>Select Status</run>
          </formatted-text>
        </zone>
        <zone h='6375' id='13' mode='slider' param='[Parameters].[Parameter 2]' type='paramctrl' w='25300' x='50500' y='250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6500' hide-buttons='true' id='14' mode='slider' param='[Parameters].[Parameter 3]' type='paramctrl' w='24500' x='75300' y='250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6375' id='15' name='Closed Count' show-title='false' w='13200' x='24600' y='14625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5750' id='20' type='text' w='10800' x='13700' y='10750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f17b79' fontname='Calibri' fontsize='22'>OPEN</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6750' id='21' name='All Count' show-title='false' w='13600' x='37000' y='14625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='4250' id='31' type='text' w='10800' x='39100' y='11750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffbe7d' fontname='Calibri' fontsize='22'>ALL</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='9125' id='34' type='text' w='49900' x='200' y='-125'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Calibri' fontsize='36'>Complaints Dashboard</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='29375' id='46' name='Complaints by Company' w='49800' x='600' y='20625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='3875' id='26' type='text' w='10800' x='25800' y='11750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#72b966' fontname='Calibri' fontsize='22'>CLOSED</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:State:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:ZIP code:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Open Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Closed Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='All Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complaint by Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[my:Date received:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complaints by Issue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complaints by Company'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:State:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='All Count'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Closed Count'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Complaint by Months'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2018</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Complaints by Company' />
        <viewpoint name='Complaints by Issue' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Open Count'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='43' name='All Count' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAArCAYAAADmH6/VAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGOUlEQVRoge2aXWxT1x3Af47jj/iTOE6CHQdTkgBpSICmWZt1qHQpq6jaTkVoUiWE9sTL
      pr2s0lSpj+2kSq36UKZJfayQpkpZJ5UK6AYtVQoNAQNOSktKg2OC48QBxze+/s61+5CMOtR2
      brrrEaH7e0ru/d9/zvndc/7nnKtoCoVCARXFqHnQDXjYUIUqjCpUYVShCqMKVRhVqMKoQhVG
      FaowqlCFUYUqjCpUYVShCqMKVRhVqMKoQhVGFaowqlCFUYUqjCpUYWqrllnKMH49yKlvBGZS
      EhIajFYLux/1MtBhwfZzX6WUwnc1yJc348ykJGoMdbRs3sgLPU1sqtPITJLizPFRPp0vAA0c
      OtxBT6mwuSBvngwjVEpl9/Dn33poXv61KkKleIRjpwJM2lwcGNjCdkcturxENBxm8Pw13vre
      wx/3t+Bao1RpPsTfTkwx73RzYKCd7Y5apHicK1cn+Ps/b9OzZyeveFfvUuLGJKfzbl7pjvKP
      sfJx6VgSoZLwEig/5fNxTvznJhPONl59bhPdjlp0ADVaHC0ejrzUTqc4xfsXBKQ15RX417+n
      uONuX5HXaLXSv2cnf+qq5crQOEPiKnkydxj0Jejt8+BepfezsRTY6+6NPjkoLjQdCHFetDDQ
      58RcKsDQwMuP2UnfmOLL1TpfTGgOX0ZP345SeTW4ulxszce5FEhXSCJxbWSSiebN7HevVh4K
      RMUs2Iw419BMxYXeisSRTFY2W8rHmNua6KoRuTSRkp03m1lEQotRVyZAr8UIpLOLZXNI00EG
      g3XsK/eyV5AiIoDdYkAru5XVGKFZCXRLnSv/V614G2B2Ola54BehN+kxkkVIlglIZhEAm0lf
      +n4+yemLESxdj/DLCi+7OH5mAZo3mGS2cAnFhbocJhDiBLOVovQ4LBrILFLOz09wu3i6Po/P
      d5tw/v6bi4xeDBE0ONnbVlro7LXvOZtu4sWdJnkjTkgRQcsG81rGZxVW+cZHGvH6g5zxx+nt
      s5ZtvNNmhECaOcAlK3MdA7/pJH36OkePZ3ih38Nup4F8LMrnvgDnY1YOPt9GVymfYphBf4bt
      Tz3KVrlDKJElhsTI6WFGii5rdToc9XZ2dbaw11vH/RVI+W2TxcUfDrnICVE++2KM4ekk8VwB
      qMFkqsPjqeeJbS50ySzorZVLw33kRJFQEmxOA5ZaLdoaQKfDYapFG8sjJCWwruxSOniDv34h
      0rf/cV5slLtPBTxtvHm4rfz9zF2OfejnWsMWXn+26V5NrtrGXmd3sO9pB/tK3pUYSUhgNlAv
      M580f5ujJ0PQ3c2rRdNWZ7XS/9ROeoI3ePvTqwjP9nLwvyt4XuCT4btoOzp5fi0y5WBo4OVd
      s4xemGF4oYkB29LlB3T0FLl1B4xOC42y4iWuXA4RNm7kQJkaaPZuYq9zkRH/zPJCVyDou8lI
      zs7+x+xrWqnlYm6y0kiS8PyP16p39KzEXIzxrJYdm2wyH8gyLxag0YK3bIyBejMQFAkCPUQZ
      +jYDZBj8cJjBss+lOPbB3aUf7ztGrspiniyapdKzzAMQusiVryMIlmb6W+ROQz12MxBLMQtl
      OiyRzlF0smng0OGGilln/X7e8ZtKHC0LSPmVokoxH4kjYKOtqEH/5ylfYCEQ4OMpDbv7WmiV
      /ZyWnm1OzEKYU4HSG/dE8CYnpzV4tzau6ahYmjRnz4zzlfCT/dk9pNQcH4+JmDvc9BbtLKoi
      dHTIx9ELs0wu5EgvtymXSeA7N8pb5xbY3L+D37WWrmrpieu89sEw7/hXnqKMrW0c2W3ku6HL
      vH1ulsm4hASkUwnGfN/y7lAUY8c2ft9pUKAHeto35jlz/CJvnAjwVSRFcvnDg5TLMDk+wbsf
      TTBZ7+XIEyvrs6Ya/xKeS8S5dD3ESEAkklwkx9L+baO7mV/vctNtL/ceswydvMzxuVp+Ubxa
      F+cWopwdC3M1lGAuk1/K2+jkV70edtVr17T4lJ/yy0gpxr4OMRQQmBGXB0eNFusGO092t5bc
      h1ZF6M9GnOa9j24x19rOX56Rc95ef6yrL/bzwShTNVaZHy/WJ+tIqMj5cZHm7i3skfPxYp2y
      foTeiTKKi4PddQ+6Jf8T66uGPgSsnxH6kKAKVZgfAG3ZL1yALSfIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='38' name='Closed Count' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAmCAYAAABagbwLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEmklEQVRoge2YXUybVRjHfy0UWD/oKLCuLaxjw7nyEcIYMYuZ20K4MNliNIvxwlt348eN
      Lnpj1AtjvDbeeGV0iVzojCwxi4ZlyGQLG04YDirUrnR8M0bpC/Tr7fHGBHBt+ejpYMv7u2vP
      0/f593/Oed5zHp0QQqAhDf12C3ja0AyVjGaoZDRDJaMZKhnNUMlohkpGM1QymqGS0QyVjGao
      ZDRDJaMZKhnNUMlohkpGM1Qy+Tl7shrFOxTg8t0Qk8sqKjqKLGYaa9y0PGOmeJNT2d95gwuB
      DQSWVHL+jItySVrUZYWeu/fp+Sf8328hz2Bgr9NO6xEXNRbdmnhdLjr2aniaC5f93Ct28Eqz
      k8O2fAxJlbmJCb7vHiNgrOCtF104ZO6P2VE++3kcc1Mjb9cWZq8lGWfkzghtAwrG/RWc9pRT
      ZcvHgCASVrj9p4/2ADSdquOsa9W6FLJRF0T7D9fFh1dmhJJqPDIrvm27Lj7unhcJaUkTou9q
      jzj/3YgYVOVome7vEx9cHBZ/LCTT5EwKb/dNcb7NJ7yrckqvoRH/GN2KmZbmMkypAgpLefmI
      lchwkGuKpKTKFJ0BFbvHyeFV/ygbLQWl+3jnpWoa/7elV9BxqLoca/QB/ZMr30o3dHQ6jGq0
      sN+cPsZ0cA+1eoVbvmUJGQVDfWME9bs54dklTYvVuXuDJUklEl/5JH+FxlQw5FGUKUhvwV0K
      U+PzhLJNqEzS4Vcp8VRwtOBxahEE7s0RwoJ71RtQuqEOmxFCYQKxTFEF2Mw6iCZYyjJfYHCS
      AFZa6h5dhrnTIljwj/D1YBRTlYNm48qIdEPLq8px60N09IVRM8SVFRfBQoSZLPN1eKOYDjpp
      Knx0LCdaknFGegf4vOsB2N2ce962ZgfIP4eaHbz5uoN4aI4rnXe4Mb5EOC4APUbjLioqSnju
      WQeGpRgUWDJvx/WIPeBe1WE+OmYlL6dakkx7h/nq5kMWDMW0nvTwaVNq63J2sDdYbbSesNGa
      clSlZ1EFUyElWeR4ODzB8dq61GbK0pKM0NP5Fz8GE5gqq3jvBTt7MiTM3U0pIwqjs1DkNq+9
      0WyGZIiOAYXTtTnUklyi69e7XJqCA831vOExrjt523OXn5nHG8ujbl/xlh+x6BunN1qYXcnI
      qEUQ6PVyaUrF0VCzITNhWwxNcHtgmpDZzjFXukPzeihcvRMCpyt3WpQJ2gejmNzVnGvYmJnw
      2A0VLPj9tAd1NDa7qNziUyK++1xT8mmq2XLBWFfLlG+GIGZONpWmvmWlISc1tL+rl98KKjjt
      sbHXbKBID/HoIv23RrjoT3DoWB2vVqae84hviE9+n6esoYF3G3aliFima2AetWwfLc71V/jW
      tKgEZpbB6Mh4y0pFTgz1HDnE4tAYP/0SZHopQZyVltdrZ5zUW9NtjBg3/55HJR93eerqqI6N
      0xXK42iLY0MnhK1piRFaBJYm+PKbiXVz2FdNfk7ad1tGGeeLi6PMVFbz/qk0DY0dzo7q2D8M
      zBHUW2hN1x16AthBhip0exXs9Qc4vsm6tZPYOYbOztGPg7P1qV5ETw47q4Y+BfwL9b4i0MCG
      VkUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Complaint by Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Complaints by Company' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Complaints by Issue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      64nPWHQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='43' name='Open Count' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAArCAYAAADIWo5HAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC/klEQVRoge2ZzU8TQRiHnxaqbVNboBQopWpDMNioaEQTSIhfURI/DvoPePHsxegfYTh4
      8GpM9Gy4GDUaoxIVVPCLD0mxVEyUApWWUrZAuzseJLaoVDCEWeI+x3fmnfzy7GZmNmsSQgj+
      Y8yyA8jGECA7gGwMAbIDyMYQIDuAbAwBsgPIxhAgO4BsDAGyA8jGECA7gGwMAbIDyMYQIDuA
      bIplB1iKSze6Co5XNjRwocG2qJaZmab34xhdkSmiqQyzGoAZu91GbZ2P1h1lVBQtXkenAlTY
      UsflA+5ld0wM9HPltYLb7+Vgs496tw17EaCpTCem6Hg1TFvfF1qP7+BIqSnXKHRJUrS9VVbU
      kRhPiLFsoRmzouNOl7h4a0R8zqvqcw/Q5ih3WlfU4vK4fnu9F7OR5vpSSCUIJXNVfQqYSlPm
      MP193iqgSwFqIk2la7VXzdITjoOjhG3OXFWXAsYTCiUbVnFBLUN/Zx/tURtHD/nx5w2ZhNDf
      r7EPz15yPazlVUxYbVaqvG5adlaz07WM56apTKcUhiKjPB6I881ezpmDAfb+0qtLAYWYGRmi
      7ckkvqa9nKsrdIprKMoc47EEbwaidMeyuAMBzjaV485zsO4EQJbO+920z/m5eMqHZ5ldmakx
      bt6LMGSv4fyJGrwLEnS5BxSmmK0eK8QVRlfQZXFVcvawF2f8C3cj6s/6OhQA81kNzCYKHvt/
      oMjjwI8gnpr/WdOfAE2gFpwwx6eJeahyUvuPa5vNuTuG/gQkv3Lt0dgSg4JkeISHsWL2Bz3k
      7oppBkfSZAouLBjt/cqgeRONgVyn/j6G7E5qsyGuvoCT2934nMVYEMxOp3jzfpjb4Qz+fUFO
      V+ffFGfpex7iZreDxnove/ybqHJYsJoBNJTkDO96h7kdybKrJUiLI9ep21PgwdN+3o4qTKZV
      VKDIYqGqupLDu5e4B2gq0eg4PaFJBmJpEkp24Y348TlcE6jgWLCCzbbFV2zdClgr9LcHrDGG
      ANkBZGMIkB1ANv+9gO8qFOcWj86XYQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
