<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='ComplaintsFinalProject' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
        <calculation class='tableau' formula='&quot;Closed&quot;' />
        <members>
          <member value='&quot;Closed&quot;' />
          <member value='&quot;Open&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
      <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17#'>
        <calculation class='tableau' formula='#2015-07-17#' />
        <range max='#2018-05-01#' min='#2011-12-01#' />
      </column>
      <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-05-01#'>
        <calculation class='tableau' formula='#2018-05-01#' />
        <range max='#2018-05-01#' min='#2011-12-01#' />
      </column>
    </datasource>
    <datasource caption='Consumer_Complaints' inline='true' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Consumer_Complaints' name='textscan.1w6zi4w1odvvq013repe70i43r8x'>
            <connection class='textscan' directory='C:/Users/student/Downloads' filename='Consumer_Complaints.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1w6zi4w1odvvq013repe70i43r8x' name='Consumer_Complaints.csv' table='[Consumer_Complaints#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date received' ordinal='0' />
            <column datatype='string' name='Product' ordinal='1' />
            <column datatype='string' name='Sub-product' ordinal='2' />
            <column datatype='string' name='Issue' ordinal='3' />
            <column datatype='string' name='Sub-issue' ordinal='4' />
            <column datatype='string' name='Consumer complaint narrative' ordinal='5' />
            <column datatype='string' name='Company public response' ordinal='6' />
            <column datatype='string' name='Company' ordinal='7' />
            <column datatype='string' name='State' ordinal='8' />
            <column datatype='string' name='ZIP code' ordinal='9' />
            <column datatype='string' name='Tags' ordinal='10' />
            <column datatype='string' name='Consumer consent provided?' ordinal='11' />
            <column datatype='string' name='Submitted via' ordinal='12' />
            <column datatype='date' name='Date sent to company' ordinal='13' />
            <column datatype='string' name='Company response to consumer' ordinal='14' />
            <column datatype='string' name='Timely response?' ordinal='15' />
            <column datatype='string' name='Consumer disputed?' ordinal='16' />
            <column datatype='integer' name='Complaint ID' ordinal='17' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date received</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date received]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Date received</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-product]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Sub-product</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Issue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Issue]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Issue</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-issue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-issue]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Sub-issue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer complaint narrative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Consumer complaint narrative]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Consumer complaint narrative</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company public response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company public response]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Company public response</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIP code]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>ZIP code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tags</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tags]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Tags</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer consent provided?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Consumer consent provided?]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Consumer consent provided?</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Submitted via</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Submitted via]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Submitted via</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date sent to company</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date sent to company]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Date sent to company</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company response to consumer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company response to consumer]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Company response to consumer</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Timely response?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Timely response?]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Timely response?</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumer disputed?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Consumer disputed?]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Consumer disputed?</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complaint ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Complaint ID]</local-name>
            <parent-name>[Consumer_Complaints.csv]</parent-name>
            <remote-alias>Complaint ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
      </column>
      <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
      </column>
      <column datatype='integer' name='[Complaint ID]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[ZIP code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date received]' derivation='None' name='[none:Date received:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/student/Downloads/Consumer_Complaints.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/02/2018 06:55:31 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='520009' timestamp-start='2018-05-02 18:55:31.394' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date received</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date received]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date received</remote-alias>
              <ordinal>0</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>640</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>1</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-product</remote-alias>
              <ordinal>2</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Issue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Issue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Issue</remote-alias>
              <ordinal>3</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>87</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-issue</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-issue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-issue</remote-alias>
              <ordinal>4</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer complaint narrative</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer complaint narrative]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer complaint narrative</remote-alias>
              <ordinal>5</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>492</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company public response</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company public response]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company public response</remote-alias>
              <ordinal>6</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company</remote-alias>
              <ordinal>7</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>256</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>8</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ZIP code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP code</remote-alias>
              <ordinal>9</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1631</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tags</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Tags]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tags</remote-alias>
              <ordinal>10</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer consent provided?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer consent provided?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer consent provided?</remote-alias>
              <ordinal>11</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Submitted via</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Submitted via]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Submitted via</remote-alias>
              <ordinal>12</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date sent to company</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date sent to company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date sent to company</remote-alias>
              <ordinal>13</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Company response to consumer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Company response to consumer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Company response to consumer</remote-alias>
              <ordinal>14</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Timely response?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Timely response?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Timely response?</remote-alias>
              <ordinal>15</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Consumer disputed?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Consumer disputed?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Consumer disputed?</remote-alias>
              <ordinal>16</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Complaint ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Complaint ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Complaint ID</remote-alias>
              <ordinal>17</ordinal>
              <family>Consumer_Complaints.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>520009</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[none:Date received:qk]' included-values='in-range'>
          <min>#2016-01-03#</min>
          <max>#2018-05-01#</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.658399' measure-ordering='alphabetic' measure-percentage='0.215333' parameter-percentage='0.126268' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_283163889272090624:nk]' type='palette'>
            <map to='#626fe1'>
              <bucket>&quot;Closed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;Open&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
          <calculation class='tableau' formula='&quot;Closed&quot;' />
        </column>
        <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17#'>
          <calculation class='tableau' formula='#2015-07-17#' />
          <range max='#2018-05-01#' min='#2011-12-01#' />
        </column>
        <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-05-01#'>
          <calculation class='tableau' formula='#2018-05-01#' />
          <range max='#2018-05-01#' min='#2011-12-01#' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='All Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>OPEN</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
              <calculation class='tableau' formula='&quot;Closed&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17#'>
              <calculation class='tableau' formula='#2015-07-17#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-05-01#'>
              <calculation class='tableau' formula='#2018-05-01#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Closed&quot;' />
              <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Open&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#75a1c7' fontsize='22'>&lt;[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Closed Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>OPEN</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
              <calculation class='tableau' formula='&quot;Closed&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17#'>
              <calculation class='tableau' formula='#2015-07-17#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-05-01#'>
              <calculation class='tableau' formula='#2018-05-01#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Closed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#75a1c7' fontsize='22'>&lt;[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Complaint by Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
              <calculation class='tableau' formula='&quot;Closed&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17#'>
              <calculation class='tableau' formula='#2015-07-17#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-05-01#'>
              <calculation class='tableau' formula='#2018-05-01#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Date received]' derivation='MY' name='[my:Date received:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='None' name='[none:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]' max='1' min='0' num-steps='2' palette='green_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[my:Date received:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Complaints by Issue'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
              <calculation class='tableau' formula='&quot;Closed&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Issue]' role='dimension' type='nominal' />
            <column-instance column='[Issue]' derivation='None' name='[none:Issue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]' direction='DESC' using='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Open Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>OPEN</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
              <calculation class='tableau' formula='&quot;Closed&quot;' />
            </column>
            <column caption='Select Start Date' datatype='date' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17#'>
              <calculation class='tableau' formula='#2015-07-17#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='#2018-05-01#'>
              <calculation class='tableau' formula='#2018-05-01#' />
              <range max='#2018-05-01#' min='#2011-12-01#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_283163889303306246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Date received] &gt;= [Parameters].[Parameter 2] AND [Date received] &lt;= [Parameters].[Parameter 3]' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889303306246]' derivation='None' name='[none:Calculation_283163889303306246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889272090624:nk]' member='&quot;Open&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]'>
            <groupfilter function='member' level='[none:Calculation_283163889303306246:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#75a1c7' fontsize='22'>&lt;[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Status' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Closed&quot;'>
              <calculation class='tableau' formula='&quot;Closed&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='CalStatus' datatype='integer' name='[Calculation_283163889275101185]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Open&quot; THEN (IF [Calculation_283163889272090624]=&quot;Open&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Closed&quot; THEN (IF [Calculation_283163889272090624]=&quot;Closed&quot; THEN 1 ELSE 0  END)&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;All&quot; THEN (1)&#13;&#10;&#13;&#10;&#13;&#10; END' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889275101185]' derivation='Sum' name='[sum:Calculation_283163889275101185:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Longitude (generated)]' field-type='quantitative' max='32337850.177237358' min='25525765.953492012' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Latitude (generated)]' field-type='quantitative' max='7245379.286307958' min='2417262.5556852221' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' />
              <lod column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:State:nk]' />
              <geometry column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Latitude (generated)]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
          </datasources>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Company]' derivation='Max' name='[max:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Product:nk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[max:Company:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
          </datasources>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column datatype='string' name='[Company public response]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Issue]' role='dimension' type='nominal' />
            <column-instance column='[Issue]' derivation='Count' name='[cnt:Issue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company public response]' derivation='None' name='[none:Company public response:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date received]' derivation='Year' name='[yr:Date received:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Company public response:nk]' />
              <groupfilter function='member' level='[none:Company public response:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]' direction='DESC' using='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[cnt:Issue:qk]' />
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]'>
            <groupfilter function='level-members' level='[yr:Date received:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]' value='297' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]' value='43' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[cnt:Issue:qk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
          </datasources>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column caption='Status' datatype='string' name='[Calculation_283163889272090624]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Company response to consumer] ==&quot;Closed with explanation&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with non-monetary relief&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed with relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed without relief&quot; THEN &quot;Closed&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Closed&quot; THEN &quot;Closed&quot;&#13;&#10;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;In progress&quot; THEN &quot;Open&quot;&#13;&#10;ELSEIF [Company response to consumer] ==&quot;Untimely response&quot; THEN &quot;Open&quot;&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='COUNT([Status] = &quot;Closed&quot;)' datatype='integer' name='[Calculation_283163889283158020]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='COUNT([Calculation_283163889272090624] = &quot;Closed&quot;)' />
            </column>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date received]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Issue]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_283163889272090624]' derivation='Count' name='[cnt:Calculation_283163889272090624:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_283163889272090624]' derivation='None' name='[none:Calculation_283163889272090624:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date received]' derivation='None' name='[none:Date received:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Issue]' derivation='None' name='[none:Issue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_283163889283158020]' derivation='User' name='[usr:Calculation_283163889283158020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]' included-values='in-range'>
            <min>#2011-12-01#</min>
            <max>#2018-05-01#</max>
          </filter>
          <filter class='categorical' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Issue])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Account opening, closing, or management&quot;' function='range' level='[none:Issue:nk]' to='&quot;Wrong amount charged or received&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]' direction='DESC' using='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[cnt:Calculation_283163889272090624:qk]' />
          <slices>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</column>
            <column>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]' value='320' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</rows>
        <cols>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[usr:Calculation_283163889283158020:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Consumer_Complaints' name='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk' />
          </datasources>
          <datasource-dependencies datasource='federated.1b553wp1dpcwkb1dlsqmh1rcp4qk'>
            <column datatype='string' name='[Company response to consumer]' role='dimension' type='nominal' />
            <column-instance column='[Company response to consumer]' derivation='None' name='[none:Company response to consumer:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>CalStatus:&#9;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#000000' fontsize='9'>&lt;[Parameters].[Parameter 1]&gt; : </run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='36' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='43' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='39' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='37' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='50000' id='35' name='Complaint by Months' w='50000' x='0' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50000' id='40' name='Complaints by Issue' w='50000' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50000' id='41' name='Sheet 1' w='50000' x='50000' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50000' id='45' type='empty' w='50000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='6500' id='1' name='Open Count' show-title='false' w='12600' x='11100' y='15375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='5500' id='7' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='52200' y='4500' />
        <zone h='8375' id='13' mode='slider' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='68000' y='1625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8375' id='14' mode='slider' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='83900' y='2500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6375' id='15' name='Closed Count' show-title='false' w='15800' x='25500' y='15625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='10000' id='20' type='text' w='10800' x='11700' y='9000'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f17b79' fontname='Calibri' fontsize='22'>OPEN</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='6750' id='21' name='All Count' show-title='false' w='16400' x='39500' y='15250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='7000' id='26' type='text' w='10800' x='27400' y='9750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#72b966' fontname='Calibri' fontsize='22'>CLOSED</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='7125' id='31' type='text' w='10800' x='42000' y='9875'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffbe7d' fontname='Calibri' fontsize='22'>ALL</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='9125' id='34' type='text' w='60100' x='200' y='-125'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Calibri' fontsize='36'>Complaints Dashboard</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[sum:Calculation_283163889275101185:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:State:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:ZIP code:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company public response:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date received:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[yr:Date sent to company:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Open Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Closed Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='All Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complaint by Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[my:Date received:ok]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889275101185:qk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889303306246:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Complaint ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Date received:qk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Complaints by Issue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Issue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Calculation_283163889272090624:nk]</field>
            <field>[federated.1b553wp1dpcwkb1dlsqmh1rcp4qk].[none:Company response to consumer:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='All Count' />
        <viewpoint name='Closed Count' />
        <viewpoint name='Complaint by Months'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Complaints by Issue' />
        <viewpoint name='Open Count' />
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='44' name='All Count' width='144'>
      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
    </thumbnail>
    <thumbnail height='44' name='Closed Count' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAsCAYAAADVX77/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACfklEQVRoge2Yz0/TYBjHP2sH29oBwwEj/Jp6QTmMiwdiJGiEeAATPZr455F44WBCPM2Y
      kBnFG04l4YCkooHJJhurtZN29WTscGQkQN68Wz/H53ne5NtPk7fNE/I8z6ODUUQHEE0gQHQA
      0QQCRAcQTSBAdADRBAJEBxBNIEB0ANEEAkQHEE0gQHQA0QQCRAcQTccLCIsOcHHU+b5tsPKh
      xLcjh2OgKxJj9OowS5khJmKhpqdCbbETrFvkspusFpzmfUVjdmGKh6n/33cbCHDIr22wbDgQ
      6WVuJs29MR1N9bCrFXLr27zaO8ZVNB4sZbifaDwt/R1gGzusGA5Ekjx9NMViWkdTAUJEexIs
      LEzzJB2GusXLt3scnjgvuYAa7z6VsFHJzFwnE2k2EyYzO8lsHNyDfd4UG7tyC7B+8LEIxFPM
      pdXT55Qe7kzGgRobO9XG1qUGvGwOTAygb7yf8Raj/deSpIFK0aTiq0stoFC2ABgbiLce1uJM
      aEDlFwVfWWoBxSMbiDKcaP6Nb6QLLQL8drF9VakFuHUPCKGc5fmJMtgLYFEo/6tKLeAikFqA
      qoQAj/qZfuVsDo4ANFK+nyGpBQz0RgGb/fJZDBxj1YBulaivKrWA1BUdFfhaNFsPWyZfLKAv
      RspXlloASZ0xoLJ7yG6L0cOdEgaQGknQ56vLLUBLkhkEzAJrhnv6XL3K6y0TiHBjNNbQklsA
      3dyeHkLHJb/+mXyt2YxDPrdFzgR1ZJS7A41dyQWAOjLB43QYaiWWn2/ywviJ5QJ42NUy2ex7
      nhkOKBrzt4bQT5xvg30ArRciqs7c/E0W23Mh8pdOXomdA+nvgPMSCBAdQDQdL+APrtLNPYnN
      HeoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Complaint by Months' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Complaints by Issue' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXBcSXrg93tn3QeqCiigcIMAeJNNss/p7pnW9LTmaM/sjDQrRcgraWXL
      l3xGyLEb4XXYf9gbuxHS2gqHvZa165Bi5dG1o3uOnrOnp8nuZrPZvEGQBIj7LBRQ9/kO/1F4
      deEg2A0ePXy/iEIV3svMl/Uqv8zv+/LLfIJpmiY2Nk8o4qOugI3No8QWAJsnGlsAbJ5oPvEC
      oGs6d1fSFDTjUVflI2Iyt5omWahsOZPKFphJ5B/IVeNLs1y48AGTs0tcu3Fjsw7ajulT6VQ9
      7+Isl6+PP5B6PWz2XQBMw+CDW4v84Q9v8m9/dIv3pzZ4kFZ2Opnm9783xp214o5pbk4s8k//
      +DwT66Vdy0qk8iwmC3u6bqVU4odX5vnB5uv9yTWyZf2+6l5F4w/fGOPc3eSWM+/fmOPfvDX5
      Ecq8N1du3OLUmTMM9kRZnp/h37wxxrmJBMtzU5x/7zy5ss6dsatcuHSNjfgif/u3f81ifAMA
      1RNgY2XpgdRrN25dv8Ld2UUAkotzZBvktZhJUTYgsTzP+5eukU6lmvKWcymKGsRnp3j73XfJ
      lasdpry/VTT51rlbvD2V4sSBDqIOke+9P8Fg7BnaHft7pfuhqz3AaydNol5l13Q/+mCSOc3B
      b39+9J5lZjN5vn9lnkjAjU8VmU9k+fsPFH79c0cYDrv2q+oPjJc/9Rzvv3sW1RvB5fUir0C5
      kufcuXfoHxrgnbd/yOJskk5fmbXeX2JkZIRYexsAgUDgkdQ5ubFOUJb5g3/9Vwz1DmP477Ia
      zzLS5SWzskzwxMuEjSSlUoU3v/8Gx08e57tvX+Lpw32U1hcQB14ilFrh2LPDnP3em0wszO+v
      ACTXU5ydSvHUoR5+5dkeAF45GkNVYSOZ5Zvv3mUinsfpUHjpRB+vHW5nai7OubkcUUXnx+Nx
      YtEQrx+P8M1zd0lr8LUXRznT6+f8jVkSFYn1tSTXFjMMdIf5x68MN12/kC/wZ2cnubOaxRRE
      nhqJ8UvP9lAslZlcTnFqtIu5xQQ/uptm0A3fH1vB5/fwH796mIX5FW7FCxTNEr//vTH+4WcO
      cffuAt++skTZFPjCswf49HBoy3d++akBXuj3k8nk+T+/c51vvjfDP339EB/enOcHN1ZYz1cI
      +d380qdHGQo5uTA211KmD4CF5XX+5dgMGc3kS88N8+JQtbEZms6f/niMy/Np+mIhfuOVEdyy
      wI3JJb51aZFEvkJ70MMvvDjMgbCLK7cXeePaEolchaDPxddfGmG03c2PPpjEUJ1cubNE30CM
      M4E8t7JBxidThLwy1tjV09MNkpMTJ0cQKpdoa48Q88nciS+zFN+gq72Nm9cuMXl3kgOHj9EX
      a9/PJrQrvkCAZHKDgZFj9IR8rBlw8lg3+cQCfcPDFAUTj8dHceYu/SMHWImv093TiTsQ5uiB
      LsbXDTx+F1fO3yAQ9tEtxPZXAGZWM5jA8f56Q3G7VMDkm2/fZs1U+cevHuLO9Ao/uDDJYKef
      fL7E1YllTox08fWne/jzC/P8f9kCX3vuAG9evMv3ry5yptfPWjLPW5NJXjrZz1ejPv760iLv
      3g1zqk2oXatYrBAM+fn1Y71Mz8X50fg8zx/uRCuUmFxOk9dMcoUSY3dXMAaj/MqLQ/zJ2bu8
      fTvO051ufA4Jw5A50OnHYVb4u4sLPHWkl8MRB8nK7oqcz+fm6YEgP7iVJKlBuqTx2VP9BJ0i
      f3l2gh+PLTP0fNeOZS4ni3z1+QOcvzrDdz6c44VNAdCKRZzBDn4x6uObFxd4+06CF2IOvvHO
      DIeHu/han5/vXpjiG2fv8s/+wVHSRY3PnOwn7Jb4m3MT/PDGMqOvDLGUyHJ1Jc6xoQ4ORNws
      JArcXC3wiy+PsrIY52x2A9Xh5bnTr9TqFP3C52ufv/TlX6x9Pnz8FIePn/qIreSjc+TE6R3O
      NHeEr3X3b5vq6ShAH41n99UGKGzqwA6lWa4quTwTG2WePRTjcHeQL57qQQCmVrO1arz+TD9n
      DnXgBs6MdnG8t42DnT5ypbpx6Pb7+PLJLl44FiMgwXwi13SdtpCfFwaCLK9nyW8axYXS9nr5
      688McHSwg6hbJFWo0NfVRsyv4vW6eO1kD16HTNApcnNmjUTR5OnBrb1/K05FBgw0HV462oNi
      6sys5VFlsVoPcecyzxzs4kRvG0e7A1TyFSxLRHa7+erpGM8e6aZdrX7nyYUNNFPgC2f6GO1u
      49OjEbKpDGtFk08dieEUDGbiORRZpFCqK8qR9jZ+9aUhzvQHmV7NEO0I8txgiC+/MIj7nt/u
      0ZPZiHPx4kVyZYON9TjxRJLZu7e4Pj6Blk8xv7jI/EqCxdkpsiWN1dU4RjnHxYtX2Mm831cB
      8LuqOvZautmQ1HQdE1Dk6uUkSUQAtsxBC0K1QkK1VxeF5tOiKCAACCKyCK2T2HdnVvjfv3OT
      lexWj8pWBOuSW8qpXkziNz9/lEPtLr77/iR/eG76HuWZzK5lkRwugqrBH75xle+PrWI0lr1b
      mYLQ8FbPU//OArIkYJgmZc0ARBSpmkfevK+mafLH37/Od64to2/znVyqjHVLdcNElqr5BLF6
      35dnp7H6i7FrN5ryzs/OASZnf/ID5lcWmJ+Nb54pNnx+sPja2gkHfBi5NTZyJulUkr6hg6ii
      wcJqEr/HxUZ8hXSuwOydMVZWE6xOTVFxeXZUdfZVBTrQE8IlzfHTq/OMtLsIu2Ruz63T0xnA
      L8PYTILn+wPcuLuGAfRGPFQSe/O6AOTSOcZWcgSMAokKnGpr7remVtPILidffrqP6+Nz911/
      QRDIlzQqmo6IwXSywtdeHMEhjPN+PLdtnngyx4RicHtujSvLeV44OYBSKXF3o8wrz/Tx8oCX
      scmVamK9sqcyGynnClxbyhKVyqwUTEba3ET9JqBzZXqDF/t9XJnZwOXxEFE1ptaKnDk1yGdG
      gtyeXmUnv1TApXBnNcNqpsDiwhpZIJte5zt/95eUBB8DAY3f+503GDpynFhPF7cuXeIX/9Gv
      4fV4mL07zsysjuudRXSPl3Lez6FEB2hZ3j13mX/0W/8lflXY4cofDU3TkCUo6xKJVJ6wz8nZ
      927idYkEO3rJp1a49uH7BHoOsrE0iT/cxez0JN4jRyjeGmd9eJiQurXcfRUAh8vFr3xqkD99
      b5rf+csPqxeQZX77F07zlad7+dPzc/yP36j2FqcO9XAo4uTGOvWeHwFRAMkaAUQBUajfSFkW
      +as3b5AuGwT8Hp4fCmFk0gBIosChnhA/Hk/wP//J+8TavShURxGrDEnYLE8QaqOLJArIYvXq
      w51+LnywyD/7kwv8t185yV++Pc43NlvQZ04PNd+4zVHs7JUZzgIhv4vPnR7k1aMdIMCJTjc/
      vjDBmxdFeoMOBBHQjW3K3PzOmxWSRAFBrJYtCALtQRd/89YYmbKBz+vmxeEwQVXgdHecb5+7
      xbfPgazI/NKnDyJLCsd6vJy9NMXZyyL9ISdiQ7liw5B6aijE5cVZfvevr+DzqLS7JdyuAMdG
      Bqig4ncKfMoRoKs7xmq6zKnTxwAdBJlY32GcjjiiGcQdipDdyCALGq5glNPPntoc2vdXACqV
      CrLsYvTgAZaXlwmEO3n99S8CYJRSxI0OXvy5gWriker70aNHABgcHNyxXOFBBMNpmsbCeh5T
      EImF3KibQ22uUGIlVcLnddLu3UYcd+Hb58a5mDD4J58fZjFZoifiRZW23uRsvkg8q9HX7qkJ
      0t4xWVnPUUakJ+SmXKqwkCzg89x/fU3TYH4th8ftIOSp5y19hDKtPLGwF6dsaa0m8Y08mbJO
      Z8iDW5E2r2uysJbF6XIQ2aX89fV1CqUK8ZxGrM2Fz+3C5Xp83bf5fB63e/8tlQciAA8CSwD+
      p68cedRV+ZkgkUggiiKGYSAIAk6nk434EgXTSdCrEols494sJkkSJOh8+PV9UAKwzxNhD44X
      T/Rz4h6uSJu943K5qFQqiKKIrusIgkC2qHPwYDfXP3ibWxOTSLqOHOhg6ea7RPqPIuaWiJ76
      Dx6JAAj3PZrvjU9MLFDQ56I39Elw1n0ykCQJr9eLotRnxwW9yMT0Qq2nDYbbyaVTdPYMEm3z
      IqhunI+oy3xQisonRgWy2V9KpRIOh4NyuUwul8PpdD7WNkChUHgg9fvEqEA2DwZVVTEMA0mS
      HnVVHgm2ANjgdDrRtJ1DoR8HTNMkkUggCAKmaW5rEzQqM4Ig1GwbQRBQFAWn00k2m8U0TWRZ
      xu/32wJgUyeVSqHr9amz1gZlmua2jU8QhJo3qfGclTaXzyNIAqIg4lSrYcGGYSCK4pbyrGsK
      gkClUqnZKNZx6zqNtNaz8dqGYSDLMpqmIUkSPp+PQqGApmkUi8VPjhFs82CRJAlRbG4OVoMW
      BAFN1zFMY9vGajVmS0ga85umicOhUqloVHStJmDbNf5WtruWdZ3d0jemNQyjdiydTmMYBh6P
      B8AWAJs61lyARWPjtihVyrW0jb29JThWHmuksBq4JEo4VBVDN9AMvVZu46jSWI/G440jQmPZ
      jfVszdOYvlEoTdMkn88jimJNOGwBsME0TcrlMoVCAbfbjcPhqDVqqyFJoogsybUwvcYG2tjY
      t+udBUHAoag4VBVzU6AahWa3Hr1V7Wpt0I112amMxvINw6BcLqOqKoIg2DbAbmzk5vhw5SoR
      3wh9LgfT+QKnOg4BsJqe5Gr8Jk41xJnYcyhmkfML56jg4FO9L/P+zHfIGSY+VzfDXh+X4uNI
      gsqhjjP0eCP7X1m9COllCA5Uw3DSc+DrrX7OzIMnBuL2/V1NzdG0mq7ceg5AlZVte1iLnYTA
      yqMqChVNo1wuoyhKU1orb2v5rYKymw1iqVWN6Q3D2CJApVIJv9+Ppmn2CLATxeIS/9fF/4ew
      p4+19BTL2WkurlZDhJOZO/zB1W/Q6R8ikx3nT27+Le9M/RXT+QJtqoOKqfHW3R/R3TZKr6+L
      peQ4s7k0XZ42/vjD32U+n9n/Cq+8Dzf+DNYXqv/f+COwosJv/QUUdo+6tbwkUI3l0nW9SZdu
      7GV1Q9/ReG3sia3Gp+ka+VIRAaEqRA3XbbUbrGONtKpDjdex8jc2/u2Eqqn+uk65XK4ayLve
      lYeIWc5T+Is/xcxrmKUSjtd/ESEzTeGNcwhOBeXFz8H6Hco3ZhH9Hpxf/yXyv/e7KJ/9Ks7n
      D5D9f/8O73/+a/tWn5mNMTpDp3gqehyix5lYfqt2bnL9OiMdL3Cs/QjDHif/y8W/4HOHX+Wt
      sb/CK3+Gw1ETKPHm5Lc41f3z+ACfs52j0WdZ3LjKRHKGHvexfasrAKvjMPwarFyFcPdHKsLt
      dqMoCtlsFl3XqegaqqzgcDhqAiEIAqVyBVWWkUSpqdE1NuZGb40kSqhKvQeWJQld17fMPbT2
      8o2NtrGBW+W0fm41gq06NRr3VpmZTLUTemxGAO3KeXB34/lP/zNcX/w0pR+/hWkYSEfO4Pry
      q1Su3gDDQD54HMdrX0IKyAjBGPr4RYyKsc3qmo+HU3aRLK5vu6OFU3KRKlV3SEgVN/A5gvRH
      nuGfvvA/kEhe4PLaFODmN575bV6KHW/IabKWj+NRvPtaV4pLkMtBfhXi1+BjbBGjKAoejwdR
      FKloGsVyiXK5jNPpRFEURLHqyhQ2DUlJkpBluead2e5dkiRUWakdEwSh5nVqfVl5dvrc2KAb
      jfHWV+O1Wo83lvP4jADZLEJbBwCC14tZqm5zoo9dpDDtQH3lS5gLVzDWVtFnvch9QRBkHM8e
      oXzx+r7Xpy98ht6FC/xv7/5LHJKfV/uPM7N2gX99YZovH/5VlOU/4vfO/w6GofPVw7/KT+78
      KTc2FqiYboYCMUQK/OGFf0WH/xBH3CLjy2/xf6xfoM13kKciA/tb2ZUrED0Fbf2QW4K1za1U
      Zt+EYF/188JZCPRD9NA9i1MUBZ/PV/OUaJqGYRi4XC4EQaBcrnuDgC2qx70wTbPm499pQstq
      sLIsbzl+P1iTYDvlf2xigfS7V8l/6xzOL72GdvldCAwhRwwq82XcX34VgNIb38Qw2lAODyL1
      tJP7v/8M73/9G+T/6A/Qix58/8WvP+Jv8YjILYMjDLICpSQYQCUNug6OABgFqJRB8cGmAW7F
      Au2GruuUSqWqv1wUURSFRCLB2NgYU8UiistVHSHv0TC11DrhznbS8QTB9vDmUaH+t/6nykds
      komlFcJd0XoxWEte66W3LtV5bEYAaegErtcV9JkZpJHTKMePYK7Ogbc+MymNHoPpBfSpKcSO
      TtQXnq6OAq99AX313ssLf2bxdNY/O4LVd1fwYxcrSRIul6tmFAOUy2VmVlZwhUK4+/q25Gky
      agXAhNKKSPTAAIginYNbd2zYr1DnUqVC53B19ZclQvcq+bEZAWweLpqmNakXu5FMpfiT736X
      vnAYyTTp7uriWz/9KUM/93Nb0jYuYTVNExOorC7QOzzA6tQsXYP9gImA0NRI9yIEu6lApmky
      O36H/sOjTelae/xWQ/uxGQFsHi57bfwAbpcLT7SDQlcMgMvpNKVkclO3aPTGNOcThOqOFsLm
      UNDkxmxIt9cVxE2zwTQLW73Bm03lCda1GmeMG6772HiBbB5fVFWlz+tFNwx0w8Dh9RIeGtpq
      UG7TjM2aAi4QjLaTWFzaTNuSrjF9w7v12Wh4taZtLKVR36+laRk5GoXjsR4BZpc3uBMvcGak
      g+AjWIpU0XQ0w5rFlJAEAdMw0c36njq6blAxTBxyc5CWaZqUNR1BEFHk6i4PumFQ1gwcsoQo
      CpQqGtXiBZyKtKUHbeTC+CLpsgEInBntRDU0Lk3Fcfv8nOrzY+g6Z28sUtBNhnoijLTXV8+N
      z6wyu1FGN02eO9RFUBU4d3OJog49HUEOd3n43oUpZIeK4nDw8mj7lroMdERZXF9HdjgQBAFf
      T88971/VCK0bu6rbRWJhCU8uj3MzIK3hhkHLXIKFNZLca6Qwtzm7XThF4+fHVgCy6Szj6xVe
      OdjOG1cX+crTWw2uB83Z6wvIqgKCwMmhdorZHFfnN3B6/Lw03Ea5VOYH15ZwqSIen5fnBttq
      eS/eWiSjCZRKFQ4PdRJ1mvxkfBW3KtMR9nMo6uY7708TafOgOFSeGwrvUhOTgiHw6ol6o1tP
      lznSH2R8qTrdO7e0TjQWYTTs4IdXFhmKuLE2zYiGAxzsd5DPZLm+nMVrlhgZiNLprYY2mFoF
      j9/PSwd3DtHoikbZuHCBjqNHMU0TTyTStOmXuE3jEmiO0xEEgdjoARZuTRAbGkBW5JotYKkp
      TU2/enDHEIhWrJIEYWtUq1W3WtGPuw0wu5Lm5FAXqirQ6ZLJmeB5MOuit8c0kVSFl4901Q45
      JQ8veWQuzVW3WZ9a3OCpgzG6fTJvXVugYraxOeHJUyNdyJJIKplmIl1ibTXHswe7kAXwOmWM
      comOaIgXt9lwd2tdIJMt8MOr8/g8Ls4Mhgj5XRSL9WcHrOcqHIg6EQSBgEOkqINn89dt8zrI
      5opcmE5xarSTD29ssJLTuKLpdLYHORiUWEik+dHVEj3RAKMd3i0jgMPhwEm9ITc2/pqLcYc4
      HUzrvaqhdw71c/P8Bxx/8XlMoa6nb/HGCCaYO68H3l4oBMxNI7t66zYN7sbQiWpm4DEeAfZ5
      X6WPhGjo/PDKPBUDPn0shkeRKDYsnMqVNbqcMiDgVkTKOljbosqiwMzSOtPJCi8c7ODtSwnG
      5taRTIMSEi/0+0mns/zgcg6Hy8nLo5GdezhB4PVnh6qejoU4N1YLnOxs3iBAloTqlomKRMUw
      kRs6weV4iltrRV443IVTFlFVlWePxFAF+Mn1RZTubn75U0MYhsGbl+fpa/fg2qYubkVhY3IC
      xe/HE2mvqSQ79dD1sIim6B8kRaGts6NmNTefpXZMQNi1HbSGX1j5G20R63OTDWBNEPAYC0B/
      1M+5u3FeGW5jpajz7EMWCBN48WgPggDraxuMr+Y5090cwuBRZTJFDb8ik6+YqA2hLeMzcTTF
      yacPtSEIAm6XyskD7bhlkZ9eX0R2Ovji6apa9861BfK7jHCGofHBxDpdYTez60X6+4OkskU2
      sgVSuTKr6RKDUT9n76wwEnFSQEYVTaaWMwxEvVyc3uDkUDvr6QI+t4PhDjfnbsUZDDnQRYlU
      KstsqkzYrZA3qI1ijQiCQKynm2Kbn+W70wBopRKVfB6nz0dufR2tUN36XjCNpoaplcuk1zfw
      tllzE1U1Rdc0JFmmobnXRpd7/dwmZpPkmKZJPpNj/s7kNgIpYKlSLV/q8RUAj8/LoVCFt2/F
      eflo170z7DOmqfPTa8vIqkQ6X+b5oz1MLa4zm8gyn9RwOgSOxtr4wbVF7jgkXF4PCiYXJuI8
      fSDMldkkPR1+3rmVpy8a5FhvkDevzONzyjjcTlKpHJfnUqiSQA4R1649ncThbj9z63kODnbS
      7lNZXsuQLQv0hBykixU6Ojw8NyCwmq3wmcNtlApFFjJlBqIwGguQzFXVNllR6GwPoqh54nmN
      Tx+KIotQMSCR03j1ZDfyDuEJ2mZ0Z6QnxursLIpDxe1yUowvEYl24HB11o1OGlyQwNrUVIMA
      VMufHhune2gQp9dTV4MsL9DmZ3GnUdFsNooFQcDt89IzcqDl3t3DbrAnwnbGMAxKmoEiS8ii
      0OQVEoSq56bRC5RJ55jJmhyPeSlW9NqPL0siiiSi6QZag8dI0/RqXkXa+Yf+iBRLFURZ3nb7
      yI+CaZr8/TtnUTrbay27UQWy0rSqMyaQWUvg8TjwBpufLGMYBvHpObqHBhoEx6SUL1IplWpq
      Ss0DZMU1NFyr9u1Mk/jCEkPHj1DVnPb2vR/bEeBxQBRFXGpdmVZkidaHLEmSiBXV6/N7OOYH
      BAGnuvXWypKI3KAmybL0wH4Ap2P3x0E1LjjfK5qho8Cm52ZvAXACUEyliHaP0OrIFEUBxaGS
      jK8RbI9gYpJaWyexuESwo741o9giYE2zzdQn4ATh/sMqbAHYR/YrpuVh0LjWdy+YpknFMLC2
      prJ6esOszk0A2/a55UIBj88y2Ld6bELdXcyN3SIZTyCpCpJaFbFQQ1BbY4O3vE81oahWDhPI
      JtP39Z3AFgCbPaJpGhpbhVxA2OIWrZ8Dh9vNxsIC7dtMcFn0Hhmt+u43G/JyeWrHejTaFdv9
      b2zaDa0h2pZh3Vp/WwBs9kQun0d1V/v/1pges6XRQXOvrajqNiHOdXVIQKiHK5hbZwRa1/Q2
      zjtsJ1JNwriZdycbyxYAmz0xu7CAN1Sd6W5tdI2emGqClg20Gt7qEaBbA9mqZW81pLebXxAE
      awZt04VaTbhrvu2wBcBmT6zmMuBsXWOwTXTONoYqNMcEtaZtRthmSnhrOVbaapxd9T2XTNXm
      AVpKtDLXjsmyjD8csgXA5t40+ubrqkxLaHNDj79F3dipQVsqjwlGQyhbLYx607ZonA+oxRYJ
      QtM1ATzBAF0jQ1tcszSUa6FVKmQSG3Y4tM29EQQBt1x3mVYbo/Wq0jiJtZWtxxuD5Bobv3Wu
      8Vrb6e/C5p9W41sUmvclqqlKLcib4Rj2CGCzJzqDbfy7f/f3m021qnO3KkDRkEzfSD+1EJ5N
      FcfQNe7enNgiIIWNJP5wPYLWOqsXi7tGgNbVqVYfUMOKr4a6Nc5btGILgM2e6OnpplQWSWoq
      O0XmR9odRIeHajp56+ZVrTPHialpuoaHyC2uoPg8yJshEat3p5rybScElrtz2+hTNjfsFeqb
      ZlnHrf2IHvtwaJvHC1mSMU1r8qzmiKRVEHYyQBvDGFoxFYm2ks6qkcbl91PK51lfqj5buabv
      Y3mRzC3FWNfMbiRr+bRKBU8wgOJ0IMsylUqltheRYRi1J87YNoDNnlhaXianWXEcZtMbbOre
      LXmq+nezPt5oK1invO0R4uUCpm4gAO0HhtAlBV1WMBUH83PLpHWZ1OYrbWx9pXQJZ88AWVOp
      vlCZm5hurgvVCT1RFGtrou0RwGZPXL89jS5YhnDVMN0yZbXHUJAtfn3AtRn6YFJ94Lpz83lg
      giDgcLtxB/zV8zWPVONE2tbyDcNgbW0FXde3jXmyQkFsAbDZE596+gTfemec+VR1RZCl09d2
      Yd5cfL7bul1zhzj/mim7XZxDS35zS67tt2QXRRGjXCG9HCdtuYy2wRYAmz3h9/n4tS+c4V/8
      xfmaDm5NQlnU1gC0xOFYevx2vvkaDTZCo/dmZ+qittNqNEl1EIx1IW1uxivLci2t9YwAWwBs
      9kx7KIBoGugNpuNWR+QO6wMaR4rt2GYniObT2+34szvGptGu6zqVSgVBEGo73NWM4nuWYmOz
      SXd3N6Odnrr7UWgOTpuczbE8Pb/tfj2NbDex1WhPNAmQWY8O2m5E2E4ArTJURW0yehsfoiHL
      cnVX6z1/e5snHlVV+Sf/0VeIeje3J29ZcF40ZN54Y4yZ8amaqiE0paz321uFoCG0otbwqeXa
      xTTYXqBMk4rW7PpsbfyVSsUWAJv7IxgI8NqZAcJiatvzmqDy459MMnntDtAc17NlZNjFa9S6
      k1tjT282HG9aR2zSZJjLslzzADkcDiRJQlGUmlDYI4DNfSMIAl/74qucGGxHNCt1g7chjSEq
      vHVulstnL9XyWO/b6faGWdftd+rN97JwvbpTxN6eIfDY7wxn8/giCAIHRw/y5sSVpp69qZcW
      ZT64vkGx+D7Pf+7Z6rGWyEytXKaQzdb+tzbQatzYCqrbqlQa4oM2MzQti2ycm7aO6BWNcqnU
      MFvQENW6ecQWAJuPxOc+/RwbqRR//s5sc49b662rjfD6RA5Ne49PvfZM7SmVVupcoYy2mtrM
      1jg73Nycy9ksSiFtFV8TksZhoTE4b3VugXB3N8FwkOTq2o7BcAJ2LJDNR0QURZxOV93Hv3m8
      3kvXw5DHpwto336XF7/43OZGWNUGr7rd+Do6mprmdiqQVC4S6emu5QO25Gnc9+EYzP0AACAA
      SURBVH9mboV3xxa32BGj/e2MjDbvMWvbADYfmVdfepqBkLwllr/R42NNlk0sVfjJ37+DXqlQ
      KZW488FlJKd715nj7ajt7bkNlhCUTJkVMdj0WhaDZM2t/b0tADYfGa/Hw2//2pfo8DY/WHt7
      BGbjJj/623PoFQ1PJIInEq55iHadJabBNbpNOEXN5dpQxnb1qEZrtMxJ7Omb2tjsQE+si//q
      6y8jmpWm41aDtHZksEzQ+QT8+NsXqkYtQk2f30612bL7RGPZ1NWl1sa+02zzdl4oWwBsPjaH
      Rw8QUI3aE1yAnUMbBIHllMD6WrZ2rrW9bp0vqIdbb2nA2/X0xg7lNJRvnbMFwOZjI4oiv/UP
      P8svvzjIsdjm3kFQW9Bea2zWaCAI3L4dp5CqeoCaw+nqeRtpfHTSdo9RasTK2yosd+YSvPv2
      RfLpDObmRr+2F8jmYyMIAj2xdnKZDV5++lWm55b49jtjjC8XgK0L5kVBoLPDg9Pvr+Vv3SLF
      8uwYm9O7tUjTlvO7PZeglYzgYqzk5Nbbk6imxqDfFgCbfSLa3kG0vQOA7liMWEeYK7em+cab
      N9GRWlKbhDqad4q2JsJqE2kNbs16rs20TSXVQ7DrRvAuFRUEdJefAjCm2SqQzT5imiaZTAYA
      r9fDV7/wCr/2uWNV41MUETdfgqnj9Tm3uDNrcUPs7E0ShK1xQtvVY0/1xRYAm31EEAR8Ph9Q
      DT4DeO7kIdxmDqeeJSDk6PVWGPCbaLqJJIpbGnqjK3PbnR9qNrZZ9wyZzUKx132v7VAImweC
      IAgEAgFM06S9PcL/+ltfw+PxVHdhEEWSySQXr19n+e4kjmgnjs1HpraGQTeKxnYbXllpDdNE
      MNmbCtRaV/sJMU8mpVKp1ks/SEzTpFKpUCgUav9LkoQgCFQqFSYmJ5mOx9kAfN09iLK8Jc6n
      sDDD0OERlu5MYpnCN8buskZdcBrFpSA5qTj9e6qfLQBPKA9LAKC6A0Mqlarp5rIs43Q6MQyD
      cqWCKAjk83lu3bnD1Po6RUXFbJg8KyVWiXS2czrWT29vLwALCwv8wVuXWJKDe9b5t8MWgCeU
      hykAAIVCgUKhUA2CU9WaraBpGtlsFkEQkDafNVUqlZpGAU3TUBQFh8NRW9MrSRLxeJzf/+H7
      LChtTfMD94NtBNs8FJxOJ+JmOHS5XK41VqvR67pOqVSiXC5XV3LJCopSf0mShKZpVCqV6tNq
      NI329nb+my+9xHEhed/1qc5N2AJg85AQBKE24lgbV1mfnU5nUw+uaRq6rtdelh1hreuFqlpV
      qVQIBAJ89fmncBTTTSvPai7XbeJ/wHK12gJg8xBRFKXmvcnn87UGryhKrcG2hjzUtlDfDF2w
      ME0TwzDQdZ2Ojnb61eqGXYIgYBoGJ9U8r3iLHBWSiIa+87yCbQM8mTxoG2CnkGRN08jn82ia
      Vluk7nK5yOfzVd1/myA6wzAwDKPmPbLKt86rqsra2hr//qcfcK0g4dRL/M5/+EVkWaZYLPJ3
      b57jxykZXdja39sC8ITyoAVA07TaBrStGIZBOp1G13UcDgcej4dMJoOu6xiG0SQ4jWqRLMvb
      qzOCgKIomKbJ+K3bBAIBujqjtTyVSoV/8e/fYFEN2+sBbB4O2zV+S20RRRG/348oipRKJUql
      Ej6fD6/XuyX+Z7tnBDSqRdZ7qVTCMAxGhg8Q6+pE0zQMw0DTNBwOB58d7kI09C1l2AJg89Cw
      1BlLECyPTj6fr/XiXq+3ZgtYr2KxWDN+LRqForYxV7GIpmmUy+Um4TAMg+dOnWTUUdmSxxYA
      m4eKJEkUi0UymUxthzagpv+rqkowWH0aZaOR3Mh2Pv/Ght26RLJcLiOKIl85eQBvKdU0mtgC
      YPNQEQQBl8uFw+Fo6sVzuVxtkgvA7XbXjF5ZlimXy7XG3eje3E0YrM/WqNDX002vw7YBbB4D
      3G43gUCgyRDPZrM1I9jlcuHxeGr7esqy3OQlslQjK701X6Bp2pZr1dQdUeT5gU5EvVJfr/xw
      vq6NzVZkWcbj8eD3+2t7+FtBc1DdjNfpdALU9vO0enzLuIX6zLKqqltGA8vesFSto4dG+XqP
      g87SOkouabtBn1QedizQvdB1nVQqhSiK+Hy+WohELpejVCrV0lnzB+Vyedv6VyqVms3Q6kK1
      NsS1ZppTqZQ9Atg8Hlh6veUdshqv2+3G5XI1qTGlUqmpt2+dNW41giVJIp/PV6NPy2V0XUcU
      RaLRqL0gxubhsdPsMFDT4aHqzrQC4Cx7QFVVUqlULc5nuzKt/JYbtPF5wK7Nh+6Vy+VaueVy
      2R4BbB4eu21bLklSrae35goatXNJkmpGseUVsmgMiwBqaVRVxeFw1NI2qkJWOtsGeEJ53GwA
      C8MwyGaztceber3epvPW+gFLVbKMW2uFmWUsQ1UwLHXHavzWyADYzwizefywjGBFUSiXy009
      PdQ9RxaNur41+2v16daD8axyLQO6cdtG2waweewQBAGPx9NkDDeiKAput5tcLlezF3Rd58aN
      G4RCIRwOB5VKpTajLAgCxWKxFmwXi8VqE2q2ANg8llg7S7TGAFlYa4pLpRKVSnVjXsvQTaVS
      NTthdXWVUChEsVisGcWWYWzbAE8wj6sNcD8YhkEymcQ0zdpkmLXrRDabxeVy1dYcWNGilUoF
      t9tNuVzG5/PZI4DNJ4/GsGor3t8yfi21yQqttibRZFlGkiQcDkdtEY1pmvYI8KSSz+dr3pBP
      Io17hxaLRaBq9Da5ODddqlYIhXVekqT6CjNbAGyeZGw3qM0TjS0ANk80tgDYPNHYAmDzRCMC
      6OU8F86/z9jtqT1nzC7fYma9eZo6Ho83/Z9Kp2qfZ66NkWV7pm5fZX65mvbCT9+muONVNdKp
      HFBm7MatPdfVZisP4zdv5Ma1sR3LvXt3es912G9kgHffOc+zL7+CKgmsLswwvbDM4OgxVmfH
      yedLCKobRIX+kJvpxAYuV4AeZ5YcBrfHrrKR1TjzzGkKpSITN2+QLhQJtndz8ewbDB15hjMn
      j5JLJ5i7fIk2VwCnbHLgwAGmp6cYGBhkJZFBTN6iO3KEG1duM/Lpl5i4dJGi4OTMoR5++uFt
      VEVhuNvJG9+/yRf+wcvcvHaFZCrJmadPcvnDy4S7ehnu735kN/KTxoP+zfs7fEwtrHJg9Agh
      v5upOzfJZJIce+o4K6tZetoEEkaAWJuLqalp/C6xln5h8gamI0CX142vr4fFu9P0RANcun6H
      WN8QvV2RfbsPIkAFEVWqBg3dnpzl2Wef5db1D0nnizxzKEbKCKAVksTnlhl56jTr8YVaAbqm
      kVsaYyJeZm5+ntVEmtOnz7AyO03P4AhnTh7dTKlw7KlTJNcWUErr3JqeZXY5XStHQuD22C0O
      HTtCfvEGJf8QA94S4zOLSIFeFK2IL9bFyMgh2tt8xPoGGQpqzCxvsJ4tIUv2nN798KB/87V4
      HE3Ta9Ga4Wg3zz13mitXbjI9OcaHV24RDrhqZdbTi6yuriKKEvG5eYrA1NQ05356FkGSeO/8
      e/t6H0SAwa423n7nPGO3p3BIOu9fuIDT1yBltThujauXLlLS6v9PTEzjcKpNm51aeFWR9y/f
      qB6XTW58eJFCWaDvyBne/tZf89TpE7W0R4c7uDi5gV8VcARjrExc4upknK6gc/PZUQLgIL48
      QXwji7C5zZ0puWgPehi7ufMQa7OVB/2bB9pCyJLB2PgdADbWFjn/3ru0xwYZ7gywWBBxNFig
      9fS3CIei3Lp1E29A5dL5D1he26CnvxfTMDhxot5m9oP7mggbO/cesRefJ/gxL7oRX+Ty+Cw/
      9/LzH7MkmwfNfv3mjXx49ge0jbzAYNR778QPGHsm2OaJxnaD2jzR2AJg80RjC4DNE80TJwDX
      Lp3nJz/6IelS1YMxOzd/zzzlXIpcueXxy9llrs2sP4gq2jxEnjjnebakcWakne98/4cszs/T
      E3Jwy+9jJlHmN7/+Et/4+zFI38QTHeHAgS5++u3vcfBgPxklRptfYuHmRSJd3VQqOm0jLz7q
      r2PzMXnivEAzkzdZWssTiwZYWMsQ9TuoGAK5isDpwz3MrWqkVydw+9rIaialjRXC4TZ84Sjz
      KxmU0hretjBL8/PERk/R1/7oXXk2H52PJQC77fRlY/NxuN+29VHaommaH08FatxkyMZmP/nh
      B5OspXcOi2yl8RGq95PnibMBbKokEgnC4fAeU+tkMiV8HoV8GdxOhcTqEqbqJRL07Zgrk80g
      iRJut/u+6/ejD6e4OZO473z3iy0AD4lEdp3zdy8AMBI9wEh0+JHWp1wuM37jKqYkUsgZuNwK
      xYqBQ6hgigqiqTM5vcTIwUEUGRLrFZ453sn4jVUMLYfgkXGQYH6ihORxIRqQy+eQVRdOM0ci
      byJLMp2d7eRT60huN7lEmo7efkrpOHldgnIGT6gLp2CgiyJ9PT0P/T7YAvCwkCsYgarb1HTE
      HnFlwOv14vN6MTGJLy3h8vooVEzaQ34AHJIBiotQwE8FkbCZBclFV6yDoFclL4Db1JleXKM7
      Ft0MVjRBgGxyHQ8qRrlAIBBARUdy++iO9iKgUxCDKLpEKNANJuj5BImKh3w+D/CRRoyPyscy
      gnVdt22APZIorvDuyo8BGA0cYzR4/BHX6PFmYj5BoazfO+EmhqEjivfXFg1Dt0cAm8eTqaUN
      2wi2eXAk1hOEQ3s1giGTyeLzecnn87jdbvT8BtPrFQ70dOySJ4Mk2UawzWNIuVxmevI2yZyG
      KpQRFQfFbL5q0JoCfo/Mh5fH6R8cIuD3sLy0wtPPPUc8fpfVxQKqaKCpbi6nF9GKMrF2ldnp
      OKbixBd0sbC0Ttgt4Q5FcZhFMiVQzBKKJ4RTrLCSzBNwCmiii4jfQaoII4O9D/0+2ALwhOL1
      evF6vESA9MYaguLEFJSaQevzOsnnNdrCIfIlne7OdgACgQ5CIR96IYPi9zF7d5rYYDcdfhmf
      rwMdiWwhi0P14FXBVL2ophOpDOGgHzAxKkVKpkJnewgEcIgm6VLKNoJ/lrGN4PvDNoJtarw3
      8w7vzb4DwNeP/zI9wYevKjxsbCPYpkYo4GO4r7rli8up7lu5S/PTxJMFjh07XIuLt2aIV5ZX
      iHZGd8ybz+fR9epjR8Ph0L0vVkiwkHfhU3X8vp1njy1sI9jmgVMulREFgTvjN9ANKObKuIJO
      FpbiBNzwrb85T1f/ILpWRFZdnDp2gCvX7iAYGmowRGkjjssbYPruDCeeOcm573+XnkNnEEtJ
      3LLBXMlHZvpDQp2DyGaWrNqNX1+no2+YTHyBfLHE1FyckeFuimU4eezwQ78HtgB8Annv7vus
      ZzcA+NKJz3P+9iUAfC4vR3pH9lxOuKOLfp+PTDaDqFeYW03S5lEouhUCHgcHDxl42jrwuR0g
      gCC56IhGEKg+d1dzK5Rw0BvrQgR6B0YIeJ2IzgDlSoVD3b2syXk8/gDrayI9kQA+yUUFiHT2
      oAgVJNULZolgW+iRGMG2ADxAvnP1ewCEvG2MxPr3rVzTncGQ6qvR4o5xAAylA9i7AHg3VRGf
      t/p+KNCsygSDbVvyxLoawziaN0s5MDq65bhv+CAAHR2d29bh0MGt1wD4zddP20bwg+KPL/wx
      AFFflJ8/9PMP7Dr12J8n8jZ/LB4bI1gv5bl1awxNClAuFejqaqdUKDA0NHRfF3ucaOuofm2f
      Y39duN8f/z4rmRUAfvWZX9017ZWFK1xdvArAawdfo9O/fQ/5IMlsxFlYSTF8aLihIVRDn3O5
      NJ2dnU1h05lMBoT6iLEd2UymNrI0sryygoBJNNq5bdpEYr3JmH6MjGATT7gXUStgumQymSSS
      7MEwjNoj7T+pmKaJpmlNxxbWl1lILAPw7MhT91WeNyBSdlVvaWO51SeW1xfVG4aBw1UXRFHa
      Wo9GrC0IAXS9+Z63Xme3coDaXp0AyWyBg4eGuTN2jRIOzFIK2aGSK8icPD7C9Ssf4vRHyG+s
      MDZXndkVFJWIz8OVWxMMDA5Tymdw+4KYpTRITnLFMmIpSWz0NMWNBURTJKUXKRYcdEVcXDj7
      Y2RvAN10IhpFBoYPko4vkCqae/Mm7TP3FADDhGI2Say7h0w2z2BbN7quIYgi4uYjKT+pCILQ
      1CAASuoG6+7qfpay/HTTuXQ+w835CQC6w530hLu2lGfRWK4gCEhSfXhuHaolSdxSj0Ya00uS
      uOt1diunlc5IG7fGJ/AHg7hQCfq7wDSJxxOoqorH48Xj9yHpCkP91ZldUXECJsMHRujo7MIh
      i4DJ1ESKrt4eMsk1HHIQt0PGEQiimQLFdZNofycuWUARBxEcXnIbCXzBbhAE3B4Phio8nkaw
      4vRw8GDVkPF5rUfU758v+pNERczXDM42SQa6ds9wHzTaJSdiJ/jBrR8AcCJ2Apfnwexeo7h8
      HDq0VV3x+aprAgaHR2vHwi0xb42qDMCJU9XOoj0UqB/0V9tLZ2f9PllPb6ejvSlda0idbQQ/
      Jvze278LQE+gl58bfaXpXOsM7ceh0S5RVKH2/4Nq/I87j8wIXlxYYGL8Fi+8+lmU+yruwTI2
      d4dMofqMmedGTzWd+zjLDeeTc3zz2p8D8HzfpwgFmntEawY27Nj6UIYtM7R7/70eOfe3JriO
      FQ5tvX8cdjKY4REawVoxi+y891T1wyalzJIwVjf/O7WlZ/6oyw1dTrXWiFsb/88y5XIZ9BwX
      L91BVQxu3V3m1IlhMjmNYwc6eeOd6/QERYpyG04jjz/SiSoJZFcXKHsi+J0SmY0ELqdKuqzT
      FuhlsD/MzetXwOFm8c4Yke5hVJcHwciRyeQJBDzcHpuga2AQKhUkxSTo9XJ3Jc1nX3zmkdyH
      LQLgcrlYnR+jzDOP1QjQym49s829ccgCM8spAj4Hbl+AI7KHcEcXUUBQZIb7uwl6VTTBQcDr
      Ar2IqQTwOGVW1/MEAsHqghqjyK233kY94CWvhTANg1AwiDx8CK/HTyKdpb+3b3O5sIFggKet
      g6DbQb6Uo1Ix6Yu5WF5Zxr9pezxSI3htLUEwEt4X46BVvXi+/1P7UKrNfhBq76TqdKyOmLGW
      gfPQ6IGWHJujo6eTtkjz8de/8gu1/46cqKqnne1VI7er5bFtI4fqRrJ7l6C4R2QEV5i4M4W/
      s2dfev/7VS8a1Zrn+z7VJDw49qFCNp8YHpERrNDTE+Cnb17mmRefZb8HolavyXuz7zCfmgPg
      v3v5v29Sa1qFJ1Es7Pk684ml2mTW4Z5hxpZvNgWP2UAhkYBwGNe9k94HZe7cXmJk9OPHPT0y
      IzgUHeaZZ8UHsm96q9ekuyOCM2DcI9f9k5fWav76YTG2JXjMBvRymYXZaVIrcVSHG5eko8tu
      ytkNFKcTQ3BgFDaQBIm7i8sMDY/QHolSzFafA7y6cBfJHWRxKcEXvvQy1y7cQPWYFMtBVhZm
      yeoipdQaOAQ8agfZ5QWk7hgBQUPTS3x4eZzewQOIpSJqwEm5BE8dP/LQ70OzAJhl7ty8ia66
      P/JU14OKgLTZX1SvlwheYqEwmLAwc5dgMIgvFiWfSVJGZS2/Tnd/P6LLR0e0i0ibn4SeZy1T
      JtY7gCiruN1+BFQCQTfBjiiK6EHQN0gmKtVJL9VFdj1BMNZNe28XpUy2tt4YUQJXkLDfSbbM
      o58JXhm/gaMtyMLsGiXY0/DY6p+3IyA/Gag+H42zAIeOnax99m0ap72x6oqwSKQ+axuOxgg3
      LBSz5niHRg41lBblYGOkdLSeQfVVt5M/eLh58UurL++RGMHejnauvfUGXdEu9lpUq3/exmY/
      eCRGsCfcw9de/wzXx5efvGcnPWF8FCN4PZHA6XIRX54n0N5D0FdXVTKZLE5FBNWNskvjWVle
      AaE5LHq7DbQemRGcL1ZYX1xE3+6kzc8MerkMwI2rl5CcbmbvjBHsHEUySpx45jRjly5Q1kxE
      QUIVDQRPG+VikXDQxepKAlQfi9O3cTgcXJ1YYDAaIOD0k3MKlDIlPIqJqXgY7QlyeWINt6JR
      MSQCHheVzDLvvf8Bg0MjeF0qK4l1Yh1h+vsHHvp9aGrj8TvXccUOc/JkhU9ulP+TzV4nH1Wv
      i4nJaYKBAJLTgzhyGKc7RCTgQmRTpzehnEuzkswTCXpI51QCAT/hUAcmoBhFdEFm9MAA0YAL
      XZfxOCAtlekMBzHRiaeL+BwCXl+QiikR8DjB52BUDhAOBSnpAtGwSSAQfPRGcGTwAOfefQfZ
      5cf50Kpgs5/sdfJR9QU54qtbqp3R5i1Qaqu+fD7Cm9pKa8iyb4eZ3I5IYxro7Ny62i0Ybjy2
      dX/Rf/6bn72vtSaapt3XWohansYDguzipZdfbk5lmmykUgS8LpbWUkTaghiGjsu1v1MoNjaN
      /NtvX2J2Jb3n9A/sGWGGVmYjlSWbSmLqJlPpBIrqY7AvtmVJ5L2WATZyr6V9rXkf1nUaeVjX
      aTy339dpXSJp9ZLZtSWmN8pIpSSKICOFO3BUCgTCYdYT64iyilMyQFKYnl5gcLALZA+p1Tnc
      wSilXIaevj5SiRUE1UU6ncPUypgC+FwqTn+YxMoyqWScwYMn0HIbLK9nCbgUKggIiBQy60Ri
      A6iUyZRMujrqjtmppY3HY02waeisLM7RHomQyhTo7GqnkM3VlkR+nGWA95P3YV2nkYd1ncZz
      +32dndSC+ZU4qUyZgd4u/CIYAZFLFxbxr+cIB90IhkZBNymV8nR2RsilM5iKgery4a6kKDsl
      5pazaPks6ElUUSQrqLhluHPnDj7HLMHhE7TJEh6HzPRiFq9a5s7EEt5gkC6/A8PTRpvfw9zc
      OpL0aFwu97yq5HDzwgsvPIy62DxEBg6McgDIl/IYokI+XWJ4IIovFMWpStXZ4dm7RLoGKKaT
      SF4vssOHV4X1bAkzm6G3z0sqkauNAEOR6h4/XqeC7A6QXo/j9znJl3QCXjc4Ohg+4MTjbyOV
      ydMfdJPM5IlGo8BjuibY5mcTp7Pq5ghY7z4frfOxQyPV2dqAt9ne63C4IVxt7G2RqvEc9Psb
      yq7GVgd9ntoxj3PT6A1UZ4IDgWpYdHPJ9QCcR2IE29g8LuynEfzP/5PP7pjPFoAnmLGrlzAU
      D92dEYq5LMFIB/G1DQy9jCIKhNsjrCbSdISr7tJsKoWkigiyB6dStUXy6Q1kt498voRKmffO
      X+bMS88jlvIgqZR1WF+eIdDRS7vfSTKvIxsFJFcAn1NkOZFhdfom7UMn6Y3W3bKPjRFs87NL
      W3snuVyWdDpNKZdiaTXJ4WOHWZm+Tl6NsnpjHMXjwygX0TQdMEhtrOGPxAi7JRIl2FicJhLx
      o6s9qGaJp848hV4okMnncchFphfjDPb1UCkXmF+q9uiqqiJpSTZWCxgmRAdG6Y4Gd6/sA8IW
      gCcYwSgTifbgVAQSceg70MXq6hqdfYdJxFfpOXyQtWQWp6QjuwJ4HDKFcJAyKqE2L0q2SNgt
      geLC4/Fj6m4EobpRliKaICkMDvrwqiaaFMAjGyTzOm1+D2AiCQbLiQyRzb2EbCPY5qHS2V1f
      r9HdOwBAX0/X5v99APS6PU15VEc9NNrn80CDoYtSjx9wRLffnaOzuTh6uupmcGPDfxhGMNgC
      YPOYsh9G8GdPD/LqmcFd89kC8KSiF3nv4jjPPHWQpUQGySji8QXIlwyCPhdgkFhZBUMjJ/sY
      iYWYW1wl5HOSrQg4KCO7fazH1/B6fKhumVSqQMAtk6sIdLaHMLQSCysb6FoJWYBIe4S1jRwe
      l0wpn8ET6mRjZYFo9wCOlhjq/TCCjw3t/AxjCzvs/wlleXaWSjnHjbsLdISc5EsSS8urZFMJ
      lpeWmZ+bQRdUKtkUbZF2FmZnkfU8dxMFcukN7kxMEF+cRFBVpieXiCeSYGqsbaTJZ6obEMzO
      ztPeEUHPLVMUnNy4cZt0NkM6naasC6zeuYoow1J69x2tHyT2CPCEEuzq4+WBIXLZAqvrBdwO
      HU+kg3zJQDIKyK4wbocToSPIWnKN7r6+6ggglFB9Edr87k3j10Ob14/ikBGA2Ts3yEtellfW
      6OvrYWFlje6hk6ytrtB9ZIT1dIFw0IcgCJhhP+fOvsvAISdaKEa5YBvBNg8JaybY4/PhaQhr
      rs7nNj62SCHWWW2Qfb2Nu1zVN7hyKPVdpEaOnW66Tm93dQa4p69qcHe7vfWTDgevfv6LtX9l
      2wi2sanycY3gvRjAYAuATQupxAoL8Q16YjHyJR1Jy1PUDAKBIIlkEkUSiWzuKp3PJDEVD6JZ
      IZvO4HKpICrMzC0yMNCLqJWQ3AEyayuEunqZvn2djq5esoUS7X4n8fgyGd1Ld8RLsZBBcbgQ
      ZCfhoO9jG8F7MYDBFgCbForFEr19AyzOzyOJ4HA4MQyD9dlb6I52dIfA7NIKolZBdajIZZ3c
      2gxq1wmSyTlSeZ1oR4hMOo1WqUBqHVUNshFfxd8WwdQKTN6dQeuO0t8VZjnnI52cRsOPXE6D
      XCEcfHi7dO9ZAAqZDWZWUnRHI1QqZUKhh/88J5sHT7S7l7mZGXpiHWQK9VlbMxICSQUBKqU8
      mYJeNWaBUDhEfGWVQDBIuNNHKZvm/2/vTJojx447/sNWQG2ofWMV2Vy6W909Uo+scOggHST7
      I/hgO3z0p/DdEfoO+hjSVRdbR8VoG81ML+zhWvu+ohYUAB2KbBYJVJEUmzPsifkfGEQkEshX
      wHvIzJdLPJNkOugiBSKosoyAzWwyYmbB7u4OaV2jMxEQzR7JjR06rTqSEkJWg9eJ+EFx4wnQ
      6g2JqxLFygk+Rf9+AnxnIbB5Vp0huGSvol5UJ9ZUlbB+mWvz0VIVQH3BGNAu5wL7zq5x/uos
      +3py+a1L5z44IzioypzWe+SzWSaT8fdVI77HveKuRvC6EOhl3HgCxFI5YqmLZmfnbVKDso5l
      L0rYWZZFVFkYSEFZR3Sk98eqsIj5OD8WHelWvN/UfZZ5v6n7LNM+9H0sDjVLRQAACkxJREFU
      63J5wYtV1eHk5IR6rUk2lyGoKcwcH43yAUgqqWyemTEkkYjQ7o0pbKQoHZ8QS2dpNlvMRl3C
      EZ1Bd0BjPOH5k+f0um18whxFUyjXpmzmokyMAdF4ilqzwdbmFo3yKcGQwpujES9fFKjU2qTP
      MsnOXbPwzYVDC84dGv1enXVXy9MtH6+jfYy8D1Gm646vPq93X3zG1JciGJAwJ2N8sg9ZWayJ
      Cc3mD/tV9HCMZNRPIZ/i5KRJ9fSQQj5Nyw7wNGJy0lbJPfLx5osGP3ixx+n+37AUkWhoB2ta
      YuaEGdVPSW8XUJNbNPb/yswcE0lsc3R4zO5GnJ6ooNpznjy+6O32P7/+3Z0mwG9+9Z/XnnPn
      jLCrwUeiKGIYBoNuG7+eQF9KpRNFkYlhABa1zohH+eyD4S0Vi+TyBUThchL6dbRBr4Mt+oiE
      g67k9fvknU9HNNoDTBu2PMbTrFcwLYdgOI4eulhVrz6vzKOnBDUfxlxEkRwc22Fq9EHW6Js2
      2xmTeGYDRRIAmUwmRSYVodbs8jSt0zem5PNhVFnkh5+EqdbrRONpwvEE/U6XZH6XTrNO4cc/
      QVYEkGAeSxLQdZqNNj//2T9RrrbYCsqMLfm7EQ598O4tg9GYdA70UOESrddu8PawSCAScb2I
      3ybvYDTAPj1BjyWIhIM3ppXrTbLJOCfFHlsFd/jvffFWyxVOak1kLeCaAADlcpnp3CEcGaM/
      udrq6ALn/YBDS+2AltUQEpeTVFRVBBS2NhfypAIX7kpJhUdLO8Whs7pRucJl4zazsTjnvPDW
      efj1FZv64RnBN8Xu3h4z02IwMly0RCbHy3BkETj1gHjz2RyIEt1+z/WyraNtbxaYmXNMc3Dr
      696FN1vYQk+kqdYbnrx7j58yn1v0PX6LjwUPzgi+KRqNJvFE0mV8ARjdFmMpgGV5R/99W7zt
      Tmcl7zradNDFkAKu4lP3zWt0WxhSgFXmW7O5+rc4x9dvXzEyTHYeb2NMbexxj4hfpDhUSMbD
      DHs9Erqf/sQmHgkxN01ERWEy7HF0dEokFkcNBMmnYxwdV5AUiWQygSiAanY4NMLI5pBIUGZs
      SoiWQW9ioYoCqUyasTHG7xPpGhYhn4OghglqF5+ijzYneDad0O91EWV3jxnTtplMBmf5pR8H
      70OU6S685wiEY/jlIV+93Sfo15HmA1pVA/xpStaMiE+i3upi4xDXLPaPa1ioJHUf6WwW27LA
      MmHeR7SmTCyVk0odURB5kpQ4Ptgn6JOxkhEUSWI2nSKM6hyOJFq9Ec+ePaF4fAjA0HHYe/Lt
      7Ct98AmgyDKWbaP53W0dg4EgrUELn8/7wTxE3oco0114z+FXBCZygpfpFK3hDMnyE46EEQQF
      JAlZgNLBa7qWn72dNHvbC51eURSGvTZaPINPBGSRTCGIg8Bo2MYWdfDL/PTTKNVak1w2DQ50
      Ww0CmU9R6hXimQ00RaKQS5/lCAcQ+I7kBA9HI0LRAJ124305jXPUqjUUzU+r7a3bPUTehyjT
      XXjPEU1eVIMuhDxPYfe5u20SXBS+Ood6prpo2sU+UcAPu9ub748zGwvHRHhn9+I6Qf1SjvC3
      kRN8p30ALxiGgU8W6BlzV1CTbU6Y4mPQaZJOu6P1HiLvQ5TpLrw3h023O0SVF/q5tq7tyz3g
      17/97B8ygm8aBg33VBkuoMqcVprkNnIummnOabWbIHq34Q5oCvuHRRIx96olyirNUmml4Rfw
      QbE5ppB165KiotEulsjl8x6c62UeDbq0TRs96n3dcfWE3sznUeEeNMaU+irCdABXXsRrZbpm
      PLNOC8XnXaJ+ncw3x5z9twdkQlMm+mOYDgirAlNHQXGm+EM69WoFUYsSC4r0jDlBxcEUVDKx
      IMeVFhG/hDEXeZRL8PbrU9KpCOOZxag3IKQHLxpmWGPKlTaWaRHZ2GArk/yHjeCbhkGf4x6m
      tYBtzXj1+q2Loqoqqrqm5bs1pVgq0x95NMV2LDqdDoPhCteeoNCoHFNrePcDluwxn796d2uZ
      df2qh/oyjEGHw9OKN208pnS4jxb0vsZama4Zj+M4tFp1KjW3K/Q6mW+KsCoxRaHbqvPZX78A
      2YcqC7x784q3r94wmw6o9MbMbYGQptDv9+n1uvTai/NtQUZTJCb9Dl99/ieOm32sSY/hjMV5
      3S6HX7+hUi0Sy+VQ8H3jMWYfPh9gblCqdfnkxVM3TVJoVEsEYxk3DcCxSKayJBMeK5coowdE
      qh3Tm9cacVxuoYUiZFJu/kG7wru6xI9fPHbzrpFZFS1Oyk0+WbGazsQAL5/EPGmhcBhL6C6S
      xKNuRXutTNeMp1wqEoxlyGVSLtp1Mt8MPp59+qP3Rz/99KKtaS6Xw7FtrPkUS9RQ5YX/PZVO
      M5vN8Pv9/Ffh8gbcv/37f7z///LW2AVyS8/9f//7l7fq+rgc8rHO/buMGzXIuDVEmdnUoNls
      L0piX0EimWI0XfESSxo+0cayvbvHRyJJGr3qCt4Az3YLJBJXO84uoGd2eBlecd91Mssa6ViI
      2czbXx/QNExz1Xj85OJ+VrCul+m68fglvjos8ajgVtuuk/lDQBBFZJ//0gskSdIH6xwkSdKt
      JoAgCLdukyoIwj2oQKJILpslFFyhn45G9Lptep6qjICiiBwfn668/Kq+VPXKMeO5wHDoNpwm
      xpByrYlheKhW18lsTRlOLYpFb5lU1cfB0dFKeUEgHHav/tfJtG48AIFoio1ExJN2ncwfA277
      Mt/2/HOee7ABJBTJ8dTVp8ZZ3qekeH4d2s06tXqTreXkiiUUSyWq5VNe7x+4aOnMBj5ZQPTo
      NKIFQoQD2vtc1tvI3OiMcOYGOztuz8JsYlCt1kgmV6h0Zp9ibcD//f7/PWWKR3QUxdvVl06n
      cRxIrEg8EhAYT7ztoXUyfyyol0/402d/4aRS4eDgYKVt0Cy9odya8Pmf/8jRwZd8+fqIzmDF
      QneGavGYL1+/4fM///EeJoBlMjFtz1XPcRZ/VnlyIoks//yTl9SrZU/63u4eLz75kWcAGIKI
      JAorfcHmfI4sr/Arr5EZZxEl6QXFp/Hk2QtEZ+Z9XS3B850k//rLf/Eky7K0tjWQZa3ufj6e
      TFZ+DdfJ/LFgNnfIJCKMRgNmFqxqf5dMJRGw0aMpnLlJu9VGVVfvgAMIksz2owJ6NHUfNoDI
      xJig5d3eHi0YZjMYZnOFFSTJMhIyTx/vetKn0wmv3hzwi5+7Wzb166e0xxAKextA0ZBGtdkl
      m/bQqdfInMpukMp6F3oVRBFZFHn+7Jn3gCyTgTFh2BqSikdctONimWjMW8dHCiAzYTQyCAXc
      TWun4zF+v7cKtE7mjwX5/Ablepu9eBTbsrAdED1mQbUxZIZJ0C+j51+wsSNhmTNY4SIGsOYm
      7c6QoF++hwlgW8g+H71e31PNuRsc/Jr3wPRkmrwoYJsrdkfXeVzuUebxsE8ss+0mSAr5fJ6V
      nT2v8QIJksxg0Ac8jODvAARJIZ9boVouYbnC9Xso6w3xjbNK2AB/B5CQ0nDhphRxAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='44' name='Open Count' width='104'>
      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
      8X/x/XYLktnOKQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Qfca/z9wRECWr/6HFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      JTfg0gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIqklEQVR4nO3YWW8b5xmG4Xs43MSdkiyJtGVLSuIties2ARKgLfLX/Ld6UrRIgMap6yWK
      7XiTKFEiJa7DZcgRt+mBbMVOkOMcvM91SH3f8J3lFjB0wjAMETEq8kcPIPJHUgBimgIQ09x7
      9+7d++3HIS+e/khnENAf9MnnsuefhiHvXhnOhg28IEEq6XJcecWboyaBPyCfz1+shZAwhDCc
      UKt1yWZT54dfzOi2PSbMaDc6ZLOZ9/a8XRKGHFUqpPN5CH/52yIM6Xc6RKIO40lI1HXefk+I
      4zgAvPjpMV1/St/rfDDPu2MErRo9N8OSe/5ds/GAk86QtOtT9yJkU9GL9eF7c/1yTnPabY9k
      MvH2/D58jXq396hSYe66JGMxwnDGwwdPWL9cIkLI891H9H2f3mBC/u11eX9Gz2uwWMSJxc7/
      R52NfTzPYzoO8MOQpVjs7fpfz8fF9Xj/eItFiOOcr2m32ySTyQ/u0a9nD1oVqj2XTCaOE4Y8
      ffI/MssbxFyH/ZfPOG55+AOffP63z8Z0PKbV75NeWgJgPg3w2m1mITS7Q7Lp5Ad7KpUKrusS
      i8WY+n1Omh1yuSydkyq7Lw8YjXyKhfwH5/hub61WI5vNXsw/GLQYDBd0uy0y2ewH96bb6RBP
      LuG8tz/K71hEEtzcuszD+//m9d4RsdCnN3GZtCosr10jkpzzye1vAOiPZ9z99CbPdh/z3bcH
      RN2Q15U2pRWXqZsnl3LILW/hDxpUj0+5fCnHaXtMJJci9DzagyEL74ifT8ZcW0mSy+epNocU
      cjmODl/QDKLkXUgsxXn048/c+HiHa5srHLamhIFPPB1nsYjyzV+/Op/dTXB96wo//PMfHNQr
      THoz5skUnb1d1nduk5z4bP+txNMH39IcLciEEeqhw91reZ6+PmVy+2ta1cd0+iPySxEG8zSL
      2YgoLo7j0z+LEI/EKaQWnA5DiqkEhZUVlpJLOPMRk7OA7+7v8ulnd8iORtx/+YRoYYPFNHbx
      gBJNsbO5zn++f0Tl1XMcN2Q0WdA6qnDt45uMZxO+/uJrHn3/A73gjGQmz2zQI1e4RKNd49aX
      f+f42QMcN8JgHDKbjYnMXa5+tInX8fA8j1wxR9Abk3Jn9OdzzsIkvf6AtUyU5WKO3f0WNy7n
      iaeWSWaSbGdd/tuacXj/n9y48QkDd8TR62MafchH53x0+3z6YO7w6c1tHj+4z/6bN8SiIfXB
      lMSoQba0iTOJcPXWddo/PaLe8FheTjFs9kiXtuicHjDY+Zxxa5/RaMRercedOzcZ9Vs8fPiE
      y5sfs7OzA0DLG/KXu5/z4vkz7n/3L8JIlFeVY66u5+jOEpQycRL5VYLRkMphlfXyJkHvgI5f
      JJvwOdr/mcEsyXjkc/PaFarNOtdv/Zl29SWj8Zif9ho4v/cr0PHBG/x5lHwqSvXwmI1yGW84
      xp0OWcoWaDYaXP/sC/KpKL1Wnb2THlfWl2mf1EjminQ6PfLZBItIgnG/xUpph4wTMJhOcWMZ
      IuGcVrdLeX0DWDAb96l7AWvFDN1GjWYQ5/pWidGgQxBGKa2uMR62OKq1KZfXmM/nRGJLnJyc
      srV1lWjEoVgsns9eec0oTJJLzDmsnrJeLuEHM+Z+m3xxlXrthFtffkWruo/rQLGQpRfMmE8D
      csVVnHmMMByfP6qzM/b2D7h0eZvlVIy21yJYxAjHA2KJGJOFS2l9neb+M5aufkYmMiWbTvD4
      8TPWSmXiyRh+55RIukAhnaNYzAFQ3X/JhDipRJzj4xobpTX6owkzv0d+eYV6o8Wf7tylWTtk
      4ThkczkWZwHeYML6RgHiaeZjH5hT3d8nvVrmUjZNIptlNOhf3Mfa4R65/CqFlRynrT7+KCAX
      XzAjymA8ZXuzxGxQp3ZW5PZGkiBZYH/3ASsrK0wjWVwG9MdQvlS8uL7N+iGN/oRLhQzHh4es
      lsq0ez4p54x4pkC7fsrWrVtM+00mC5d0NsM8OKM7HLG2tgq4sJgSmQe8Oe5QLq3hOgtOjo5Y
      XrvC+kqeaDJJMOzy9FWVcmkD32vgJDL0PY9iPs1oFoXAI71cYjUbpdMLcBJLJCITTk+6lK+U
      cBZT9vcqrKxvcHxUZ3u7zDySIh2PEAunPD84/f0ARCzQS7CYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDT/g/1H3B/zwA8WwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
